import 'package:dio/dio.dart';
import 'package:nroll/utils/constant.dart';
import 'package:nroll/utils/pref_manager.dart';

class ApiRequest{
  final String url;
  final Map<String,dynamic> params;
  var formdataParams;
  
  ApiRequest({
    required this.url,
    this.params,
    this.formdataParams
  });
  
  Dio _dio(){
    //Put here your authorization token;
    return Dio(
      BaseOption(
        headers: {
          "Accept": "application/json",
          "Authorization": "token in string"
        },
        responseType: ResponseType.json,
        connectTimeout: 30000,
        receiveTimeout: 30000,)
    );  
  }
  
  void get({
    Function()? beforeSend,
    Function(dynamic data)? onSuccess,
    Function(dynamic error)? onError,
  }) {
    _dio.get(this.url,queryParameters: this.params).then((res) {
      if(onSuccess != null) onSuccess(res);
    }).catchError((error){
      if(onError != null) onError(_handleError(error));
    });
  }
  
   void postWithData({
    Function()? beforeSend,
    Function(dynamic data)? onSuccess,
    Function(dynamic error)? onError,
  }) {
    // print(' POST METHOD  DATA  URLS :- $url \n PARAMS :- $params');
    // print("Authorization : ${PreferenceUtils.getString(AUTH_CODE)}");
    _dio().post(this.url, data: this.formdataParams).then((res) {
      if (onSuccess != null) onSuccess(res);
    }).catchError((error) {
      print('ERROR VALUE $error');
      if (onError != null) onError(_handleError(error));
    });
  }
  
   void postWithQuery({
    Function()? beforeSend,
    Function(dynamic data)? onSuccess,
    Function(dynamic error)? onError,
  }) {  print(' POST METHOD  DATA  URLS :- $url \n PARAMS :- $params');
  print("Authorization : ${PreferenceUtils.getString(AUTH_CODE)}");
  _dio().post(this.url, queryParameters: this.params).then((res) {
    if (onSuccess != null) onSuccess(res);
  }).catchError((error) {
    print('ERROR VALUE $error');
    if (onError != null) onError(_handleError(error));
  });
  }
  
  void postWithfile({
    Function()? beforeSend,
    Function(dynamic data)? onSuccess,
    Function(dynamic error)? onError,
  }) {
    print(' POST METHOD WITH FILE  DATA  URLS :- $url \n PARAMS :- $formdataParams');
  _dio().post(this.url, data: this.formdataParams).then((res) {
    if (onSuccess != null) onSuccess(res);
  }).catchError((error) {
    print('ERROR VALUE $error');
    if (onError != null) onError(_handleError(error));
  });
  }
}

String _handleError(DioError error) {
  String? errorDescription = "";
  switch (error.type) {
    case DioErrorType.cancel:
      errorDescription = "Request to API server was cancelled";
      break;
    case DioErrorType.connectTimeout:
      errorDescription = "Connection timeout with API server";
      break;
    case DioErrorType.other:
      errorDescription =
      "Connection to API server failed due to internet connection";
      break;
    case DioErrorType.receiveTimeout:
      errorDescription = "Receive timeout in connection with API server";
      break;
    case DioErrorType.response:
      errorDescription =
      "Error : ${error.response!.statusCode} - ${error.response!.statusMessage}";
      break;
    case DioErrorType.sendTimeout:
      errorDescription = "Send timeout in connection with API server";
      break;
  }
      return errorDescription;
}
